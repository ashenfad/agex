name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-docs.txt
        pip install -e ".[dev,test,all-providers]"

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v4

    - name: Build MkDocs site
      run: |
        mkdocs build --clean --site-dir _site

    - name: Build JupyterLite
      run: |
        # Create JupyterLite environment with agex examples
        jupyter lite build \
          --contents examples/notebook \
          --output-dir _site/lite \
          --debug

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 